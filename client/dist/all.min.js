var app=angular.module("drink",["ui.router","ngResource"]);app.constant("API_URL","http://localhost:8080/api"),app.config(["$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider",function($stateProvider,$urlRouterProvider,$locationProvider){$urlRouterProvider.otherwise("/"),$locationProvider.html5Mode(!0)}]),app.config(function($httpProvider){$httpProvider.defaults.headers.post={"Content-Type":"application/x-www-form-urlencoded"},$httpProvider.defaults.headers.put={"Content-Type":"application/x-www-form-urlencoded"},$httpProvider.defaults.transformRequest=function(obj){return obj?$.param(obj,!0):void 0}}),app.controller("activitiesCtrl",["$scope","$stateParams","activityFactory",function($scope,$stateParams,activityFactory){$scope.deleteActivity=function(activityId){activityFactory.remove(activityId)},$scope.activities=activityFactory.models.activities}]),app.config(["$stateProvider",function($stateProvider){$stateProvider.state("activities",{url:"/activities","abstract":!0,templateUrl:"app/activities/activities.html",controller:"activitiesCtrl"}).state("activities.list",{url:"",templateUrl:"app/activities/activities.list.html"}).state("activities.new",{url:"/new",templateUrl:"app/activities/activities.new.html",controller:"activityCtrl"}).state("activities.edit",{url:"/:id",templateUrl:"app/activities/activities.new.html",controller:"activityCtrl"})}]),app.controller("activityCtrl",["$scope","$state","$stateParams","activityFactory",function($scope,$state,$stateParams,activityFactory){$stateParams.id&&(activityFactory.find($stateParams.id),$scope.activity=activityFactory.models.activity),$scope.addActivity=function(activity){activity.videos&&!activity._id&&(activity.videos=activity.videos.split(","),activity.videos=_.map(activity.videos,function(video){return $.trim(video)})),activityFactory.add(activity).$promise.then(function(){$state.go("activities.list"),$scope.activity={}})}}]),app.controller("drinkCtrl",["$scope","$stateParams","$state","drinkFactory",function($scope,$stateParams,$state,drinkFactory){$stateParams.id&&(drinkFactory.find($stateParams.id),$scope.drink=drinkFactory.models.drink),$scope.addDrink=function(drink){drinkFactory.add(drink).$promise.then(function(){$scope.drink={},$state.go("drinks.list")})}}]),app.controller("drinksCtrl",["$scope","$stateParams","drinkFactory",function($scope,$stateParams,drinkFactory){$scope.deleteDrink=function(drinkId){drinkFactory.remove(drinkId)},$scope.drinks=drinkFactory.models.drinks}]),app.config(["$stateProvider",function($stateProvider){$stateProvider.state("drinks",{url:"/drinks","abstract":!0,templateUrl:"app/drinks/drinks.html",controller:"drinksCtrl"}).state("drinks.list",{url:"",templateUrl:"app/drinks/drinks.list.html"}).state("drinks.new",{url:"/new",templateUrl:"app/drinks/drinks.new.html",controller:"drinkCtrl"}).state("drinks.edit",{url:"/:id",templateUrl:"app/drinks/drinks.new.html",controller:"drinkCtrl"})}]),app.controller("gameCtrl",["$scope","activityFactory","drinkFactory",function($scope,activityFactory,drinkFactory){function getPlayers(){return[{_id:0,name:"Jon"},{_id:1,name:"Parag"}]}function getActivity(){activityFactory.get().$promise.then(function(activities){$scope.game.activity=activities[_.random(0,activities.length-1)]})}function getDrink(){drinkFactory.get().$promise.then(function(drinks){$scope.game.drink=drinks[_.random(0,drinks.length-1)]})}function setVideo(id){$scope.yt.videoid=id}$scope.game={},$scope.yt={width:"100%",height:"100%",videoid:""},$scope.playing=!1,$scope.videoPlaying=!1,$scope.setVideo=function(id){setVideo(id),$scope.videoPlaying=!0},$scope.play=function(){getActivity(),getDrink(),$scope.game.players=getPlayers(),$scope.playing=!0}}]),app.config(["$stateProvider",function($stateProvider){$stateProvider.state("game",{url:"/game",templateUrl:"app/game/game.html",controller:"gameCtrl"})}]),app.controller("mainCtrl",["$scope",function(){}]),app.config(["$stateProvider",function($stateProvider){$stateProvider.state("main",{url:"/",templateUrl:"app/main/main.html",controller:"mainCtrl"})}]),app.factory("activityFactory",["$resource","$state","API_URL",function($resource,$state,API_URL){function getActivities(){return models.activities.length=0,activities.query(function(data){_.each(data,function(curr){models.activities.push(curr)})})}function findActivity(activityId){return models.activity.length=0,activities.get({id:activityId},function(activity){_.each(activity,function(value,key){models.activity[key]=value})})}function addActivity(activity){return activity._id?activities.update(activity,function(){getActivities()}):activities.save(activity,function(data){models.activities.push(data)})}function removeActivity(activityId){activities["delete"]({id:activityId},function(){for(var i=0;i<models.activities.length;i++)if(models.activities[i]._id==activityId){models.activities=models.activities.splice(i,1);break}})}var activities=$resource(API_URL+"/activities/:id",{id:"@_id"},{update:{method:"PUT"}}),models={activities:[],activity:{}};return getActivities(),{get:getActivities,find:findActivity,add:addActivity,remove:removeActivity,models:models}}]),app.directive("youtube",function($window){return{restrict:"E",scope:{height:"@",width:"@",videoid:"@"},template:"<div></div>",link:function(scope,element){var tag=document.createElement("script");tag.src="https://www.youtube.com/iframe_api";var firstScriptTag=document.getElementsByTagName("script")[0];firstScriptTag.parentNode.insertBefore(tag,firstScriptTag);var player;$window.onYouTubeIframeAPIReady=function(){player=new YT.Player(element.children()[0],{playerVars:{autoplay:0,html5:1,theme:"light",modestbranding:1,color:"white",iv_load_policy:3,controls:1},height:scope.height,width:scope.width,videoId:scope.videoid})},scope.$watch("videoid",function(newValue,oldValue){newValue!=oldValue&&player.cueVideoById(scope.videoid)}),scope.$watch("height + width",function(newValue,oldValue){newValue!=oldValue&&player.setSize(scope.width,scope.height)})}}}),app.factory("drinkFactory",["$resource","$state","API_URL",function($resource,$state,API_URL){function getRand(arr){return arr[Math.floor(Math.random()*arr.length)]}function getDrinks(){return models.drinks.length=0,drinks.query(function(data){_.each(data,function(curr){curr.qty=getRand(qtyPool),models.drinks.push(curr)})})}function findDrink(drinkId){return models.drink.length=0,drinks.get({id:drinkId},function(drink){_.each(drink,function(value,key){models.drink[key]=value})})}function addDrink(drink){return drink._id?drinks.update(drink,function(){getDrinks()}):drinks.save(drink,function(data){models.drinks.push(data)})}function removeDrink(drinkId){drinks["delete"]({id:drinkId},function(){for(var i=0;i<models.drinks.length;i++)if(models.drinks[i]._id==drinkId){models.drinks=models.drinks.splice(i,1);break}})}var drinks=$resource(API_URL+"/drinks/:id",{id:"@_id"},{update:{method:"PUT"}}),models={drinks:[],drink:{}},qtyPool=[.5,1,1.5,2];return getDrinks(),{get:getDrinks,find:findDrink,add:addDrink,remove:removeDrink,models:models}}]),app.filter("decimalToWord",function(){return function(num){if(num){var numArr=num.toString().split("");if(!(numArr.length>1))return numArr.join(" ");if("0"===numArr[0])return"half a";if("5"===_.last(numArr))return numArr[0]+" and a half"}}}),app.controller("navbarCtrl",["$scope",function(){}]);